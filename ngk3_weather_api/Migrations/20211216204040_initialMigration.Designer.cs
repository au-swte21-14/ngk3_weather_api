// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ngk3_weather_api.Models;

namespace ngk3_weather_api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211216204040_initialMigration")]
    partial class initialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("ngk3_weather_api.Models.WeatherObservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<long>("Humidity")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Pressure")
                        .HasColumnType("decimal(4,1)");

                    b.Property<decimal>("Temperature")
                        .HasColumnType("decimal(3,1)");

                    b.Property<int>("WeatherStationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WeatherStationId");

                    b.ToTable("WeatherObservations");
                });

            modelBuilder.Entity("ngk3_weather_api.Models.WeatherStation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WeatherStations");
                });

            modelBuilder.Entity("ngk3_weather_api.Models.WeatherObservation", b =>
                {
                    b.HasOne("ngk3_weather_api.Models.WeatherStation", "WeatherStation")
                        .WithMany("WeatherObservations")
                        .HasForeignKey("WeatherStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WeatherStation");
                });

            modelBuilder.Entity("ngk3_weather_api.Models.WeatherStation", b =>
                {
                    b.Navigation("WeatherObservations");
                });
#pragma warning restore 612, 618
        }
    }
}
